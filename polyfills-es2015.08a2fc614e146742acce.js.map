{"version":3,"sources":["webpack:///src/polyfills.ts","webpack:///node_modules/zone.js/fesm2015/zone.js"],"names":["global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","Object","prototype","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","Symbol","toStringTag","species","C","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","Promise","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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","file":"x","sourcesContent":["/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","/**\n* @license Angular v10.1.0-next.6+7.sha-aaa1d8e\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}((function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) {\n            performance && performance['mark'] && performance['mark'](name);\n        }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) {\n            return symbolPrefix + name;\n        }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() {\n                return _currentZoneFrame.zone;\n            }\n            static get currentTask() {\n                return _currentTask;\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() {\n                return this._parent;\n            }\n            get name() {\n                return this._name;\n            }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt =\n                    zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone =\n                    zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() {\n                return this._zone;\n            }\n            get state() {\n                return this._state;\n            }\n            cancelScheduleRequest() {\n                this._transitionTo(notScheduled, scheduling);\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () {\n                            return this[originalInstanceKey][prop];\n                        }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () {\n                    return patchDelegate(this, arguments);\n                };\n                attachOriginToPatched(proto[name], delegate);\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () {\n                task.invoke.apply(this, arguments);\n            };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        if (!isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // and the rejected value is an Error object,\n                            // use the value instead of wrapping it.\n                            try {\n                                // Here we throws a new Error to print more readable error log\n                                // and if the value is not an error, zone.js builds an `Error`\n                                // Object here to attach the stack information.\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', delegate => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', {\n                get: function () {\n                    passiveSupported = true;\n                }\n            });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function prepareEventNames(eventName, eventNameToString) {\n        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            /**\n             * This util function will build an option object with passive option\n             * to handle all possible input from the user.\n             */\n            function buildEventListenerOptions(options, passive) {\n                if (!passiveSupported && typeof options === 'object' && options) {\n                    // doesn't support passive but user want to pass an object as options.\n                    // this will not work on some old browser, so we just pass a boolean\n                    // as useCapture parameter\n                    return !!options.capture;\n                }\n                if (!passiveSupported || !passive) {\n                    return options;\n                }\n                if (typeof options === 'boolean') {\n                    return { capture: options, passive: true };\n                }\n                if (!options) {\n                    return { passive: true };\n                }\n                if (typeof options === 'object' && options.passive !== false) {\n                    return Object.assign(Object.assign({}, options), { passive: true });\n                }\n                return options;\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                    const options = buildEventListenerOptions(arguments[2], passive);\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                if (passive) {\n                                    return nativeListener.call(target, eventName, delegate, options);\n                                }\n                                else {\n                                    return nativeListener.apply(this, arguments);\n                                }\n                            }\n                        }\n                    }\n                    const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                    const once = options && typeof options === 'object' ? options.once : false;\n                    const zone = Zone.current;\n                    let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (!symbolEventNames) {\n                        prepareEventNames(eventName, eventNameToString);\n                        symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    }\n                    const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        if (!eventName) {\n            const foundTasks = [];\n            for (let prop in target) {\n                const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                let evtName = match && match[1];\n                if (evtName && (!eventName || evtName === eventName)) {\n                    const tasks = target[prop];\n                    if (tasks) {\n                        for (let i = 0; i < tasks.length; i++) {\n                            foundTasks.push(tasks[i]);\n                        }\n                    }\n                }\n            }\n            return foundTasks;\n        }\n        let symbolEventName = zoneSymbolEventNames$1[eventName];\n        if (!symbolEventName) {\n            prepareEventNames(eventName);\n            symbolEventName = zoneSymbolEventNames$1[eventName];\n        }\n        const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n        const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n        if (!captureFalseTasks) {\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\n        }\n        else {\n            return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n                captureFalseTasks.slice();\n        }\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplayconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames: zoneSymbolEventNames$1,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR\n        });\n    });\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) {\n            return clearNative.call(window, task.data.handleId);\n        }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n})));\n"]}